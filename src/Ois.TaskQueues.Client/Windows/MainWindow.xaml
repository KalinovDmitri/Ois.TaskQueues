<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit"
        x:Class="Ois.TaskQueues.Client.Windows.MainWindow"
        Icon="/TaskQueueClient;component/Resources/queue.ico" Title="Клиент сервиса очередей задач"
        MinHeight="300" Height="700" MaxHeight="800"
        MinWidth="500" Width="1000" MaxWidth="1200"
        WindowStartupLocation="CenterScreen" WindowState="Normal">
    <Window.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="MinHeight" Value="30" />
            <Setter Property="MinWidth" Value="40" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        </Style>
        <Style TargetType="{x:Type xceed:IntegerUpDown}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="MinWidth" Value="60" />
            <Setter Property="Width" Value="70" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        </Style>
        <Style x:Key="ContainerFillTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="18" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
        <Image x:Key="SettingsImage" Source="/TaskQueueClient;component/Resources/Settings.png" />
        <Image x:Key="RegisterImage" Source="/TaskQueueClient;component/Resources/Register.png" />
        <Image x:Key="UnregisterImage" Source="/TaskQueueClient;component/Resources/Exit.png" />
        <Image x:Key="CreateComputationImage" Source="/TaskQueueClient;component/Resources/New.png" />
        <Image x:Key="CreateTaskImage" Source="/TaskQueueClient;component/Resources/NewTask.png" />
        <Image x:Key="CreateTaskGroupImage" Source="/TaskQueueClient;component/Resources/NewTaskGroup.png" />
        <Image x:Key="CreateBarrierImage" Source="/TaskQueueClient;component/Resources/NewBarrier.png" />
        <Image x:Key="FinishComputationImage" Source="/TaskQueueClient;component/Resources/Finish.png" />
    </Window.Resources>
    <Grid Margin="2">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="5">
            <Button Command="{Binding OpenSettingsCommand}" Content="{StaticResource SettingsImage}" ToolTip="Настройки" />
            <GridSplitter Background="Gray" Width="1" />
            <Button Command="{Binding RegisterClientCommand}" Content="{StaticResource RegisterImage}" ToolTip="Зарегистрировать" />
            <Button Command="{Binding CreateComputationCommand}" Content="{StaticResource CreateComputationImage}" ToolTip="Создать расчёт" />
            <Button Command="{Binding CreateTaskCommand}" Content="{StaticResource CreateTaskImage}" ToolTip="Создать задачу" />
            <Button Command="{Binding CreateTaskGroupCommand}" Content="{StaticResource CreateTaskGroupImage}" ToolTip="Создать группу задач" />
            <Button Command="{Binding CreateBarrierCommand}" Content="{StaticResource CreateBarrierImage}" ToolTip="Создать барьер" />
            <Button Command="{Binding FinishComputationCommand}" Content="{StaticResource FinishComputationImage}" ToolTip="Завершить расчёт" />
            <Button Command="{Binding UnregisterClientCommand}" Content="{StaticResource UnregisterImage}" ToolTip="Разрегистрировать" />
        </StackPanel>
        <DataGrid Grid.Row="1" x:Name="EventsGrid" AutoGenerateColumns="False"
                  IsSynchronizedWithCurrentItem="True"
                  ItemsSource="{Binding OccuredEvents, IsAsync=True}"
                  LoadingRow="EventsGridRowLoading" Margin="5" SelectionMode="Single">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Дата возникновения" Width="*" Binding="{Binding OccurenceDateTime, StringFormat='dd.MM.yyyy HH:mm:ss.fff'}" />
                <DataGridTextColumn Header="Тип события" Width="*" Binding="{Binding EventType}" />
                <DataGridTextColumn Header="Данные события" Width="2*" Binding="{Binding EventData}">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>